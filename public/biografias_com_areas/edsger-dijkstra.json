{
  "nome_completo": "Edsger Wybe Dijkstra",
  "nome_curto": "Edsger Dijkstra",
  "ano_nascimento": "1930",
  "ano_morte": "2002",
  "link": "https://mathshistory.st-andrews.ac.uk/Biographies/Dijkstra/",
  "lugar_nascimento": "Rotterdam, The Netherlands",
  "lugar_morte": "Nuenen, The Netherlands",
  "biografia": "Edsger Dijkstra\n's parents were Douwe Wybe Dijkstra and Brechtje Cornelia Kluijver\n(\nor Kluyver\n)\n; he was the third of their four children. His father taught chemistry at the high school in Rotterdam while his mother was trained as a mathematician although she never had a formal position. Dijkstra wrote later of his mother's mathematical influence on him\n[\n9\n]\n:-\n... she had a great agility in manipulating formulae and a wonderful gift for finding very elegant solutions.\nHe attended High School in Rotterdam and in his final years at school he decided he wanted to study law. His ambition was to represent the Netherlands at the United Nations and felt that a law degree was the first step towards this. He took his final school examinations in\n1948\n, scoring the highest possible marks in mathematics, physics, chemistry, and biology. At this point his parents and his teachers all tried to persuade him to follow a career in science, given his outstanding performance in science subjects. He then decided to study theoretical physics and as a first step towards this he went to the University of Leyden to take courses in mathematics and physics. His intention was, after getting a good grounding in these topics, he would move towards theoretical physics.\nIn\n1951\nDijkstra's father saw an advertisement for a three-week course in computer programming to be given at the University of Cambridge in England in September of that year. Feeling that being able to programme a computer was a good skill for a theoretical physicist to have so he registered for the course\n[\n5\n]\n:-\nIt was a frightening experience: it was the first time that I left the Netherlands, the first time I ever had to understand people speaking English and immediately I was all by myself, trying to follow a course on a totally new topic. But I liked it very much.\nAad van Wijngaarden, who was the director of the Computation Department of the Mathematical Centre in Amsterdam, had taken the same course in Cambridge in the previous year and when he learnt that Dijkstra had completed it, he offered him a position as a programmer of the Mathematical Centre. Dijkstra accepted the position from March\n1952\nbut it only as a part-time position for he was still registered as a student of theoretical physics at the University of Leyden. He said\n[\n5\n]\n:-\n... in '\n55\nafter three years of programming, while I was still a student, I concluded that the intellectual challenge of programming was greater than the intellectual challenge of theoretical physics, and as a result I chose programming ... I spoke with van Wijngaarden ..., and explained my dilemma that I had to take leave from science if I became a programmer. ...  he said he agreed that there was no such thing as a clear scientific component in computer programming, but that I might very well be one of the people called to make it a science.\nHaving taken the decision, Dijkstra completed his studies in theoretical physics at the university, graduating in\n1956\n. Also in\n1956\nthe Mathematical Centre competed building a new computer and wanted to give a public demonstration\n[\n5\n]\n:-\n... for a demonstration for non-computing people you have to have a problem statement that non-mathematicians can understand, even they have to understand the answer. So I designed a program that would find the shortest route between two cities in the Netherlands, using a somewhat reduced roadmap of the Netherlands, on which I had selected,\n64\ncities\n(\nso that in the coding,\n6\nbits would suffice to identify a city\n)\n.\nHe published this shortest distance algorithm, together with his very efficient algorithm for the shortest spanning tree, were published in the two page paper\nA Note on Two Problems in Connexion with Graphs\n(1959)\n. Also in\n1959\nhe was awarded his Ph.D. from the University of Amsterdam for his thesis\nCommunication with an Automatic Computer\n.\nIn\n1957\nhe had married Maria C Debets; they had two sons and a daughter. However, he had a problem at his wedding for the Justice of the Peace would not accept 'programmer' as profession for the records, so he had to give 'theoretical physicist' on the form.\nThe computer language ALGOL-\n60\nwas designed by an international team which began work in December\n1958\n. Dijkstra, who was a member of the team, made several major contributions: due to him was the explicit introduction of recursion and in handling recursion he introduced the notion of a 'stack', a word due to Dijkstra which is now totally standard terminology. Dijkstra, together with one of his colleagues at the Mathematical Centre, wrote the first compiler for ALGOL-\n60\nwhich was completed by August\n1960\n. Dijkstra, in retrospect, regarded ALGOL-\n60\n[\n5\n]\n:-\n... as the beginning of computing science; if we wish to mark a discontinuity in the way in which we thought about computing, then that is the emergence of ALGOL\n60\n. ... it has made, for instance, the topic academically respectable.\nIn\n1962\nDijkstra was appointed Professor of Mathematics at the Eindhoven University of Technology. At this time Eindhoven had no Computer Science Department, nor of course did other universities. He built a team of computer scientist within the Mathematics department which he managed to do despite reservations by some colleagues. It was at this time that he developed the 'THE' operating system. It was named after Technische Hogeschool te Eindhoven, the name by which the Eindhoven University of Technology was known at this time. Many features of this operating system have become standard features in all future operating systems.\nIn\n1972\nDijkstra won the ACM\nTuring\nAward which is considered the most prestigious award in Computer Science. In accepting the award he gave the address\nThe humble programmer\nwhich contains a remarkable collection of thoughts on the future of the subject which now, with the advantage of hindsight, we can now see were absolutely correct. In August\n1973\nDijkstra joined Burroughs Corporation as a Research Fellow and was made Professor Extraordinarius at Eindhoven\n[\n9\n]\n:-\nHis duties\n[\nat Burroughs\n]\nconsisted of visiting some of the company's research centers a few times a year and carrying on his own research, which he did in the smallest Burroughs research facility, namely, his study on the second floor of his house in Nuenen. He was already very famous by that time, and he received a large number of invitations to lecture throughout the world. He used these visits to interact with other computer scientists, mentor younger scientists, and sharpen his skills as an English speaker.\nDijkstra visited the Burroughs Research Center in Austin, Texas, from the late\n1970\ns and while on these visits he came to know well the Computer Science Department at the University of Texas. In\n1984\nhe was offered the Schlumberger Centennial Chair in Computer Science at Austin and happily accepted. He remained at Austin until he retired in\n1999\n.\nLet us now look at some of the books which Dijkstra published. First we look at\nStructured programming\n, a book which contains three monographs, the one written by Dijkstra being\nNotes on structured programming\n(1973)\n. C A Ellis and James Reid write in a review of the book:-\nThis book is based upon and supports the premise that programming is an intellectual activity requiring a high level of knowledge and creativity. This attitude is in contrast to that of many current practitioners.\nOf the monograph by Dijkstra they write:-\nWritten in the form of letters to himself, Dijkstra's 'Notes on structured programming' make eloquent and forceful arguments for structured programming.\nThe book by Dijkstra\nA discipline of programming\n(1976)\ncontains a Preface by C A R Hoare who writes:-\nThe book expounds, in its author's usual cultured style, his radical new insights into the nature of computer programming. From these insights, he had developed a new range of programming methods and notational tools, which are displayed and tested in a host of elegant and efficient examples. This will surely be recognized as one of the outstanding achievements in the development of the intellectual discipline of computer programming.\nH Kilov writes in a review:-\nYou look at this latest Dijkstra book with great interest. You know about his enormous influence on programming, and therefore you are very interested to see a monograph\n(\nor may I call it a textbook?\n)\npresenting general programming concepts. You are not disappointed in your expectations.\nIn\n1982\nSelected writings on computing: a personal perspective\nby Dijkstra was published which collected together\n66\nof his papers written between\n1968\nand\n1979\n, most of which had not previously been published. A joint work with Carel S Scholten,\nPredicate calculus and program semantics\n, was published in\n1990\n. John C Mitchell writes:-\nAs stated clearly in the introduction, this book has two main concerns. One is programming language semantics via the well-known method of predicate transformers. The second is a particular formal style of presentation and proof development.\nVan Vlissingen's personal reflection\n[\n11\n]\ncontains the following which says much about Dijkstra character:-\nDijkstra's life in the deeper sense was spent in the pursuit of making people think. Making people think through a problem before they put pen to paper. He was popular, but his students sometimes disliked him as much as they - grudgingly one would think -  respected him, because he insisted on handwritten papers and would not accept output from a word processor. His reasoning: by the number of corrections he could see if the person was thinking before they wrote, something he considered an essential skill in programming. So he lived what he taught, and made his students do the same.\nFinally let us look at some of the many honours which have been given to Dijkstra in recognition to his outstanding contributions. We have mentioned above the ACM\nTuring\nAward made in\n1972\n. Part of the citation reads:-\nThe precious gift that this\nTuring\nAward acknowledges is Dijkstra's style: his approach to programming as a high, intellectual challenge; his eloquent insistence and practical demonstration that programs should be composed correctly, not just debugged into correctness; and his illuminating perception of problems at the foundations of program design.\nOther awards and honours to Dijkstra include his election to the\nRoyal Netherlands Academy of Arts and Sciences\n(1971)\n; elected Distinguished Fellow of the British Computer Society\n(1971)\n, received the AFIPS Harry Goode Memorial Award\n(1974)\n, made a Foreign Honorary member of the\nAmerican Academy of Arts and Sciences\n(1975)\n; awarded an honorary Doctorate of Science by Queen's University of Belfast\n(1976)\n; given the Computer Pioneer Award from the IEEE Computer Society\n(1982)\n; given the ACM/SIGCSE Award for outstanding contributions to computer science education\n(1989)\n; elected an ACM Fellow\n(1994)\n, awarded an honorary doctorate by Athens University, Greece\n(2001)\n; given the ACM Influential Paper Award for his paper\nSelf-stabilizing systems in spite of distributed control\n(2002)\n. His final award was in\n2002\nfrom the C&C Foundation of Japan:-\n... for his pioneering contributions to the establishment of the scientific basis for computer software through creative research in basic software theory, algorithm theory, structured programming, and semaphores.",
  "math_areas": [
    "Calculus",
    "Logic"
  ]
}